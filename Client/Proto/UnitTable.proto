import "Union.proto";

package ProtoTable;
message UnitTable
{
required sint32 ID = 1;
required string Name = 2;
required string BossShowActionName = 3;
required string Desc = 4;
required sint32 MonsterMode = 5;
enum eType
{
	HERO = 0;	//??
	MONSTER = 1;	//??
	ELITE = 2;	//??
	BOSS = 3;	//boss
	NPC = 4;	//npc
	HELL = 5;	//??
	ACTIVITYMONSTER = 6;	//??
	ACCOMPANY = 7;	//??
	SKILL_MONSTER = 8;	//???????
	EGG = 9;	//??
}
required eType Type = 6;
required sint32 IsShowPortrait = 7;
enum eCamp
{
	C_HERO = 0;	//??
	C_ENEMY = 1;	//??
	C_ENEMY2 = 2;	//??2
}
required eCamp Camp = 8;
enum eMonsterRace
{
	NONE = 0;	//???
	EVIL = 1;	//??
	UNDEAD = 2;	//??
	ELF = 3;	//??
	HUMAN = 4;	//??
	HOMINIS = 5;	//??
	PUPPET = 6;	//??
	MACHINE = 7;	//??
}
required eMonsterRace MonsterRace = 9;
required sint32 Mode = 10;
required sint32 Weight = 11;
required sint32 Scale = 12;
required sint32 overHeadHeight = 13;
required sint32 buffOriginHeight = 14;
required sint32 WalkSpeed = 15;
required sint32 WalkAnimationSpeedPerent = 16;
required sint32 MonsterTitle = 17;
required sint32 AttackSkillID = 18;
required sint32 GetupBati = 19;
required sint32 GetupSkillRand = 20;
required sint32 GetupSkillID = 21;
required sint32 HitSkillRand = 22;
required sint32 HitSkillID = 23;
repeated sint32 SkillIDs = 24;
required string Hurt = 25;
required string FootEffectName = 26;
required string WeaponModel = 27;
required string WeaponLocator = 28;
required sint32 Exp = 29;
required string PrefixEffect = 30;
required sint32 DefaultAttackHitSFXID = 31;
required sint32 DropID = 32;
required sint32 AwardID = 33;
required UnionCell ExistDuration = 34;
required UnionCell PVPExistDuration = 35;
required sint32 FloatValue = 36;
required string DescriptionA = 37;
required sint32 ValueA = 38;
repeated sint32 WalkSpeech = 39;
repeated sint32 AttackSpeech = 40;
repeated sint32 BirthSpeech = 41;
required bool ShowName = 42;
required bool ShowHPBar = 43;
required bool ShowFootBar = 44;
repeated sint32 AbilityChange = 45;
repeated sint32 BornBuff = 46;
repeated sint32 BornBuff2 = 47;
repeated sint32 BornMechanism = 48;
required sint32 maxFixHp = 49;
required sint32 maxHp = 50;
required sint32 maxMp = 51;
required sint32 hpRecover = 52;
required sint32 mpRecover = 53;
required sint32 attack = 54;
required sint32 magicAttack = 55;
required sint32 defence = 56;
required sint32 magicDefence = 57;
required sint32 attackSpeed = 58;
required sint32 spellSpeed = 59;
required sint32 moveSpeed = 60;
required sint32 ciriticalAttack = 61;
required sint32 ciriticalMagicAttack = 62;
required sint32 dex = 63;
required sint32 dodge = 64;
required sint32 frozen = 65;
required sint32 hard = 66;
required sint32 cdReduceRate = 67;
required sint32 UseProtect = 68;
required sint32 ProtectFloatPercent = 69;
required sint32 ProtectFloatPercent2 = 70;
required sint32 ProtectGroundPercent = 71;
required sint32 ProtectStandPercent = 72;
required sint32 AICombatType = 73;
repeated sint32 AITargetType = 74;
required sint32 AISight = 75;
required sint32 AIChase = 76;
required sint32 AIWarlike = 77;
required sint32 AIFollowDistance = 78;
required sint32 AIKeepDistance = 79;
required sint32 AIAttackDelay = 80;
required sint32 AIDestinationChangeTerm = 81;
required sint32 AIThinkTargetTerm = 82;
repeated string AIAttackKind = 83;
required sint32 AIIdleMode = 84;
required sint32 AIIsAPC = 85;
required sint32 AIIdleRand = 86;
required sint32 AIIdleDuration = 87;
required sint32 AIEscapeRand = 88;
required sint32 AIWanderRand = 89;
required sint32 AIWanderRange = 90;
required sint32 AIWalkBackRange = 91;
required sint32 AIYFirstRand = 92;
required sint32 AIMaxWalkCmdCount = 93;
required sint32 AIMaxIdleCmdCount = 94;
required sint32 AIWeaponTag = 95;
required sint32 APCIsSpecialConfig = 96;
required sint32 APCWeaponRes = 97;
required sint32 APCWeaponStrengthLevel = 98;
required string AIActionPath = 99;
required string AIDestinationSelectPath = 100;
required string AIEventPath = 101;
};
