//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: DecomposeTable.proto
namespace ProtoTable
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"DecomposeTable")]
  public partial class DecomposeTable : global::ProtoBuf.IExtensible
  {
    public DecomposeTable() {}
    
    private int _ID;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"ID", DataFormat = global::ProtoBuf.DataFormat.ZigZag)]
    public int ID
    {
      get { return _ID; }
      set { _ID = value; }
    }
    private ProtoTable.DecomposeTable.eColor _Color;
    [global::ProtoBuf.ProtoMember(2, IsRequired = true, Name=@"Color", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public ProtoTable.DecomposeTable.eColor Color
    {
      get { return _Color; }
      set { _Color = value; }
    }
    private readonly global::System.Collections.Generic.List<int> _Lv = new global::System.Collections.Generic.List<int>();
    [global::ProtoBuf.ProtoMember(3, Name=@"Lv", DataFormat = global::ProtoBuf.DataFormat.ZigZag)]
    public global::System.Collections.Generic.List<int> Lv
    {
      get { return _Lv; }
    }
  
    private readonly global::System.Collections.Generic.List<int> _ColorMatNum = new global::System.Collections.Generic.List<int>();
    [global::ProtoBuf.ProtoMember(4, Name=@"ColorMatNum", DataFormat = global::ProtoBuf.DataFormat.ZigZag)]
    public global::System.Collections.Generic.List<int> ColorMatNum
    {
      get { return _ColorMatNum; }
    }
  
    private int _ColorMatId;
    [global::ProtoBuf.ProtoMember(5, IsRequired = true, Name=@"ColorMatId", DataFormat = global::ProtoBuf.DataFormat.ZigZag)]
    public int ColorMatId
    {
      get { return _ColorMatId; }
      set { _ColorMatId = value; }
    }
    private readonly global::System.Collections.Generic.List<int> _ColorLessMatNum = new global::System.Collections.Generic.List<int>();
    [global::ProtoBuf.ProtoMember(6, Name=@"ColorLessMatNum", DataFormat = global::ProtoBuf.DataFormat.ZigZag)]
    public global::System.Collections.Generic.List<int> ColorLessMatNum
    {
      get { return _ColorLessMatNum; }
    }
  
    private int _ColorLessMatId;
    [global::ProtoBuf.ProtoMember(7, IsRequired = true, Name=@"ColorLessMatId", DataFormat = global::ProtoBuf.DataFormat.ZigZag)]
    public int ColorLessMatId
    {
      get { return _ColorLessMatId; }
      set { _ColorLessMatId = value; }
    }
    private readonly global::System.Collections.Generic.List<int> _DogEyeNum = new global::System.Collections.Generic.List<int>();
    [global::ProtoBuf.ProtoMember(8, Name=@"DogEyeNum", DataFormat = global::ProtoBuf.DataFormat.ZigZag)]
    public global::System.Collections.Generic.List<int> DogEyeNum
    {
      get { return _DogEyeNum; }
    }
  
    private int _DogEyeId;
    [global::ProtoBuf.ProtoMember(9, IsRequired = true, Name=@"DogEyeId", DataFormat = global::ProtoBuf.DataFormat.ZigZag)]
    public int DogEyeId
    {
      get { return _DogEyeId; }
      set { _DogEyeId = value; }
    }
    [global::ProtoBuf.ProtoContract(Name=@"eColor")]
    public enum eColor
    {
            
      [global::ProtoBuf.ProtoEnum(Name=@"WHITE", Value=1)]
      WHITE = 1,
            
      [global::ProtoBuf.ProtoEnum(Name=@"BLUE", Value=2)]
      BLUE = 2,
            
      [global::ProtoBuf.ProtoEnum(Name=@"PURPLE", Value=3)]
      PURPLE = 3,
            
      [global::ProtoBuf.ProtoEnum(Name=@"GREEN", Value=4)]
      GREEN = 4,
            
      [global::ProtoBuf.ProtoEnum(Name=@"PINK", Value=5)]
      PINK = 5,
            
      [global::ProtoBuf.ProtoEnum(Name=@"YELLOW", Value=6)]
      YELLOW = 6
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}