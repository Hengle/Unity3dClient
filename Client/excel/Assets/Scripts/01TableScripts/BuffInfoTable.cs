//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: BuffInfoTable.proto
// Note: requires additional types generated from: Union.proto
namespace ProtoTable
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"BuffInfoTable")]
  public partial class BuffInfoTable : global::ProtoBuf.IExtensible,global::ProtoBuf.IParseable
  {
    public BuffInfoTable() {}
    
    private int _ID;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"ID", DataFormat = global::ProtoBuf.DataFormat.ZigZag)]
    public int ID
    {
      get { return _ID; }
      set { _ID = value; }
    }
    private readonly global::System.Collections.Generic.List<string> _Name = new global::System.Collections.Generic.List<string>();
    [global::ProtoBuf.ProtoMember(2, Name=@"Name", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<string> Name
    {
      get { return _Name; }
    }
  
    private string _Icon;
    [global::ProtoBuf.ProtoMember(3, IsRequired = true, Name=@"Icon", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public string Icon
    {
      get { return _Icon; }
      set { _Icon = value; }
    }
    private readonly global::System.Collections.Generic.List<string> _Description = new global::System.Collections.Generic.List<string>();
    [global::ProtoBuf.ProtoMember(4, Name=@"Description", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<string> Description
    {
      get { return _Description; }
    }
  
    private ProtoTable.BuffInfoTable.eDescType _DescType;
    [global::ProtoBuf.ProtoMember(5, IsRequired = true, Name=@"DescType", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public ProtoTable.BuffInfoTable.eDescType DescType
    {
      get { return _DescType; }
      set { _DescType = value; }
    }
    private readonly global::System.Collections.Generic.List<string> _DetailDescription = new global::System.Collections.Generic.List<string>();
    [global::ProtoBuf.ProtoMember(6, Name=@"DetailDescription", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<string> DetailDescription
    {
      get { return _DetailDescription; }
    }
  
    private int _SortID;
    [global::ProtoBuf.ProtoMember(7, IsRequired = true, Name=@"SortID", DataFormat = global::ProtoBuf.DataFormat.ZigZag)]
    public int SortID
    {
      get { return _SortID; }
      set { _SortID = value; }
    }
    private ProtoTable.BuffInfoTable.eBufferType _BufferType;
    [global::ProtoBuf.ProtoMember(8, IsRequired = true, Name=@"BufferType", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public ProtoTable.BuffInfoTable.eBufferType BufferType
    {
      get { return _BufferType; }
      set { _BufferType = value; }
    }
    private int _NeedHint;
    [global::ProtoBuf.ProtoMember(9, IsRequired = true, Name=@"NeedHint", DataFormat = global::ProtoBuf.DataFormat.ZigZag)]
    public int NeedHint
    {
      get { return _NeedHint; }
      set { _NeedHint = value; }
    }
    private int _BuffID;
    [global::ProtoBuf.ProtoMember(10, IsRequired = true, Name=@"BuffID", DataFormat = global::ProtoBuf.DataFormat.ZigZag)]
    public int BuffID
    {
      get { return _BuffID; }
      set { _BuffID = value; }
    }
    private readonly global::System.Collections.Generic.List<ProtoTable.UnionCell> _MonsterTypeMap = new global::System.Collections.Generic.List<ProtoTable.UnionCell>();
    [global::ProtoBuf.ProtoMember(11, Name=@"MonsterTypeMap", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<ProtoTable.UnionCell> MonsterTypeMap
    {
      get { return _MonsterTypeMap; }
    }
  
    private ProtoTable.UnionCell _BuffLevel;
    [global::ProtoBuf.ProtoMember(12, IsRequired = true, Name=@"BuffLevel", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public ProtoTable.UnionCell BuffLevel
    {
      get { return _BuffLevel; }
      set { _BuffLevel = value; }
    }
    private int _BuffTarget;
    [global::ProtoBuf.ProtoMember(13, IsRequired = true, Name=@"BuffTarget", DataFormat = global::ProtoBuf.DataFormat.ZigZag)]
    public int BuffTarget
    {
      get { return _BuffTarget; }
      set { _BuffTarget = value; }
    }
    private int _BuffTargetRadius;
    [global::ProtoBuf.ProtoMember(14, IsRequired = true, Name=@"BuffTargetRadius", DataFormat = global::ProtoBuf.DataFormat.ZigZag)]
    public int BuffTargetRadius
    {
      get { return _BuffTargetRadius; }
      set { _BuffTargetRadius = value; }
    }
    private readonly global::System.Collections.Generic.List<int> _SkillID = new global::System.Collections.Generic.List<int>();
    [global::ProtoBuf.ProtoMember(15, Name=@"SkillID", DataFormat = global::ProtoBuf.DataFormat.ZigZag)]
    public global::System.Collections.Generic.List<int> SkillID
    {
      get { return _SkillID; }
    }
  
    private ProtoTable.UnionCell _AttachBuffRate;
    [global::ProtoBuf.ProtoMember(16, IsRequired = true, Name=@"AttachBuffRate", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public ProtoTable.UnionCell AttachBuffRate
    {
      get { return _AttachBuffRate; }
      set { _AttachBuffRate = value; }
    }
    private ProtoTable.UnionCell _AttachBuffTime;
    [global::ProtoBuf.ProtoMember(17, IsRequired = true, Name=@"AttachBuffTime", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public ProtoTable.UnionCell AttachBuffTime
    {
      get { return _AttachBuffTime; }
      set { _AttachBuffTime = value; }
    }
    private ProtoTable.UnionCell _BuffInfoCD;
    [global::ProtoBuf.ProtoMember(18, IsRequired = true, Name=@"BuffInfoCD", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public ProtoTable.UnionCell BuffInfoCD
    {
      get { return _BuffInfoCD; }
      set { _BuffInfoCD = value; }
    }
    private ProtoTable.UnionCell _BuffAttack;
    [global::ProtoBuf.ProtoMember(19, IsRequired = true, Name=@"BuffAttack", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public ProtoTable.UnionCell BuffAttack
    {
      get { return _BuffAttack; }
      set { _BuffAttack = value; }
    }
    private int _BuffCondition;
    [global::ProtoBuf.ProtoMember(20, IsRequired = true, Name=@"BuffCondition", DataFormat = global::ProtoBuf.DataFormat.ZigZag)]
    public int BuffCondition
    {
      get { return _BuffCondition; }
      set { _BuffCondition = value; }
    }
    private int _BuffDelay;
    [global::ProtoBuf.ProtoMember(21, IsRequired = true, Name=@"BuffDelay", DataFormat = global::ProtoBuf.DataFormat.ZigZag)]
    public int BuffDelay
    {
      get { return _BuffDelay; }
      set { _BuffDelay = value; }
    }
    private int _BuffRangeRadius;
    [global::ProtoBuf.ProtoMember(22, IsRequired = true, Name=@"BuffRangeRadius", DataFormat = global::ProtoBuf.DataFormat.ZigZag)]
    public int BuffRangeRadius
    {
      get { return _BuffRangeRadius; }
      set { _BuffRangeRadius = value; }
    }
    private int _BuffRangeCheckInterval;
    [global::ProtoBuf.ProtoMember(23, IsRequired = true, Name=@"BuffRangeCheckInterval", DataFormat = global::ProtoBuf.DataFormat.ZigZag)]
    public int BuffRangeCheckInterval
    {
      get { return _BuffRangeCheckInterval; }
      set { _BuffRangeCheckInterval = value; }
    }
    private readonly global::System.Collections.Generic.List<int> _ConditionSkillID = new global::System.Collections.Generic.List<int>();
    [global::ProtoBuf.ProtoMember(24, Name=@"ConditionSkillID", DataFormat = global::ProtoBuf.DataFormat.ZigZag)]
    public global::System.Collections.Generic.List<int> ConditionSkillID
    {
      get { return _ConditionSkillID; }
    }
  
    private string _EffectName;
    [global::ProtoBuf.ProtoMember(25, IsRequired = true, Name=@"EffectName", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public string EffectName
    {
      get { return _EffectName; }
      set { _EffectName = value; }
    }
    private string _EffectLocateName;
    [global::ProtoBuf.ProtoMember(26, IsRequired = true, Name=@"EffectLocateName", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public string EffectLocateName
    {
      get { return _EffectLocateName; }
      set { _EffectLocateName = value; }
    }
    [global::ProtoBuf.ProtoContract(Name=@"eDescType")]
    public enum eDescType
    {
            
      [global::ProtoBuf.ProtoEnum(Name=@"Common", Value=0)]
      Common = 0,
            
      [global::ProtoBuf.ProtoEnum(Name=@"SkillLevel", Value=1)]
      SkillLevel = 1
    }
  
    [global::ProtoBuf.ProtoContract(Name=@"eBufferType")]
    public enum eBufferType
    {
            
      [global::ProtoBuf.ProtoEnum(Name=@"BTR_LV", Value=0)]
      BTR_LV = 0,
            
      [global::ProtoBuf.ProtoEnum(Name=@"BTR_ATTR", Value=1)]
      BTR_ATTR = 1
    }
  
    public void Parse(ProtoBuf.ProtoReader source){
        int fieldNumber = 0;
        while ((fieldNumber = source.ReadFieldHeader()) > 0)
        {
            switch (fieldNumber)
            {
                default:
                    source.SkipField();
                    break;
            
    
            case 1:   //ID LABEL_REQUIRED TYPE_SINT32  ZigZag
                    source.Hint(ProtoBuf.WireType.SignedVariant); 
                    ID = source.ReadInt32();
                    break;
                    
            case 2:   //Name LABEL_REPEATED TYPE_STRING  TwosComplement
                    int Namefield = source.FieldNumber;
                    do{
                        Name.Add(source.ReadString());
                    } while(source.TryReadFieldHeader(Namefield));
                    break;
                    
            case 3:   //Icon LABEL_REQUIRED TYPE_STRING  TwosComplement
                    Icon = source.ReadString();
                    break;
                    
            case 4:   //Description LABEL_REPEATED TYPE_STRING  TwosComplement
                    int Descriptionfield = source.FieldNumber;
                    do{
                        Description.Add(source.ReadString());
                    } while(source.TryReadFieldHeader(Descriptionfield));
                    break;
                    
            case 5:   //DescType LABEL_REQUIRED TYPE_ENUM .ProtoTable.BuffInfoTable.eDescType TwosComplement
                    DescType = (ProtoTable.BuffInfoTable.eDescType)source.ReadInt32();
                    break;
                    
            case 6:   //DetailDescription LABEL_REPEATED TYPE_STRING  TwosComplement
                    int DetailDescriptionfield = source.FieldNumber;
                    do{
                        DetailDescription.Add(source.ReadString());
                    } while(source.TryReadFieldHeader(DetailDescriptionfield));
                    break;
                    
            case 7:   //SortID LABEL_REQUIRED TYPE_SINT32  ZigZag
                    source.Hint(ProtoBuf.WireType.SignedVariant); 
                    SortID = source.ReadInt32();
                    break;
                    
            case 8:   //BufferType LABEL_REQUIRED TYPE_ENUM .ProtoTable.BuffInfoTable.eBufferType TwosComplement
                    BufferType = (ProtoTable.BuffInfoTable.eBufferType)source.ReadInt32();
                    break;
                    
            case 9:   //NeedHint LABEL_REQUIRED TYPE_SINT32  ZigZag
                    source.Hint(ProtoBuf.WireType.SignedVariant); 
                    NeedHint = source.ReadInt32();
                    break;
                    
            case 10:   //BuffID LABEL_REQUIRED TYPE_SINT32  ZigZag
                    source.Hint(ProtoBuf.WireType.SignedVariant); 
                    BuffID = source.ReadInt32();
                    break;
                    
            case 11:   //MonsterTypeMap LABEL_REPEATED TYPE_MESSAGE .ProtoTable.UnionCell TwosComplement
                    int MonsterTypeMapfield = source.FieldNumber;
                    do
                    {
                        ProtoTable.UnionCell MonsterTypeMaptemp = new ProtoTable.UnionCell();
                        ProtoBuf.SubItemToken MonsterTypeMaptoken = ProtoBuf.ProtoReader.StartSubItem(source); 
                        MonsterTypeMaptemp.Parse(source);
                        ProtoBuf.ProtoReader.EndSubItem(MonsterTypeMaptoken, source);
                        MonsterTypeMap.Add(MonsterTypeMaptemp);
                    } while (source.TryReadFieldHeader(MonsterTypeMapfield));
                    break;
                    
            case 12:   //BuffLevel LABEL_REQUIRED TYPE_MESSAGE .ProtoTable.UnionCell TwosComplement
                    BuffLevel = new ProtoTable.UnionCell();
                    ProtoBuf.SubItemToken BuffLeveltoken = ProtoBuf.ProtoReader.StartSubItem(source); 
                    BuffLevel.Parse(source);
                    ProtoBuf.ProtoReader.EndSubItem(BuffLeveltoken, source);
                    break;
                    
            case 13:   //BuffTarget LABEL_REQUIRED TYPE_SINT32  ZigZag
                    source.Hint(ProtoBuf.WireType.SignedVariant); 
                    BuffTarget = source.ReadInt32();
                    break;
                    
            case 14:   //BuffTargetRadius LABEL_REQUIRED TYPE_SINT32  ZigZag
                    source.Hint(ProtoBuf.WireType.SignedVariant); 
                    BuffTargetRadius = source.ReadInt32();
                    break;
                    
            case 15:   //SkillID LABEL_REPEATED TYPE_SINT32  ZigZag
                    int SkillIDfield = source.FieldNumber;
                    do{
                        source.Hint(ProtoBuf.WireType.SignedVariant); 
                        SkillID.Add(source.ReadInt32());
                    } while(source.TryReadFieldHeader(SkillIDfield));
                    break;
                    
            case 16:   //AttachBuffRate LABEL_REQUIRED TYPE_MESSAGE .ProtoTable.UnionCell TwosComplement
                    AttachBuffRate = new ProtoTable.UnionCell();
                    ProtoBuf.SubItemToken AttachBuffRatetoken = ProtoBuf.ProtoReader.StartSubItem(source); 
                    AttachBuffRate.Parse(source);
                    ProtoBuf.ProtoReader.EndSubItem(AttachBuffRatetoken, source);
                    break;
                    
            case 17:   //AttachBuffTime LABEL_REQUIRED TYPE_MESSAGE .ProtoTable.UnionCell TwosComplement
                    AttachBuffTime = new ProtoTable.UnionCell();
                    ProtoBuf.SubItemToken AttachBuffTimetoken = ProtoBuf.ProtoReader.StartSubItem(source); 
                    AttachBuffTime.Parse(source);
                    ProtoBuf.ProtoReader.EndSubItem(AttachBuffTimetoken, source);
                    break;
                    
            case 18:   //BuffInfoCD LABEL_REQUIRED TYPE_MESSAGE .ProtoTable.UnionCell TwosComplement
                    BuffInfoCD = new ProtoTable.UnionCell();
                    ProtoBuf.SubItemToken BuffInfoCDtoken = ProtoBuf.ProtoReader.StartSubItem(source); 
                    BuffInfoCD.Parse(source);
                    ProtoBuf.ProtoReader.EndSubItem(BuffInfoCDtoken, source);
                    break;
                    
            case 19:   //BuffAttack LABEL_REQUIRED TYPE_MESSAGE .ProtoTable.UnionCell TwosComplement
                    BuffAttack = new ProtoTable.UnionCell();
                    ProtoBuf.SubItemToken BuffAttacktoken = ProtoBuf.ProtoReader.StartSubItem(source); 
                    BuffAttack.Parse(source);
                    ProtoBuf.ProtoReader.EndSubItem(BuffAttacktoken, source);
                    break;
                    
            case 20:   //BuffCondition LABEL_REQUIRED TYPE_SINT32  ZigZag
                    source.Hint(ProtoBuf.WireType.SignedVariant); 
                    BuffCondition = source.ReadInt32();
                    break;
                    
            case 21:   //BuffDelay LABEL_REQUIRED TYPE_SINT32  ZigZag
                    source.Hint(ProtoBuf.WireType.SignedVariant); 
                    BuffDelay = source.ReadInt32();
                    break;
                    
            case 22:   //BuffRangeRadius LABEL_REQUIRED TYPE_SINT32  ZigZag
                    source.Hint(ProtoBuf.WireType.SignedVariant); 
                    BuffRangeRadius = source.ReadInt32();
                    break;
                    
            case 23:   //BuffRangeCheckInterval LABEL_REQUIRED TYPE_SINT32  ZigZag
                    source.Hint(ProtoBuf.WireType.SignedVariant); 
                    BuffRangeCheckInterval = source.ReadInt32();
                    break;
                    
            case 24:   //ConditionSkillID LABEL_REPEATED TYPE_SINT32  ZigZag
                    int ConditionSkillIDfield = source.FieldNumber;
                    do{
                        source.Hint(ProtoBuf.WireType.SignedVariant); 
                        ConditionSkillID.Add(source.ReadInt32());
                    } while(source.TryReadFieldHeader(ConditionSkillIDfield));
                    break;
                    
            case 25:   //EffectName LABEL_REQUIRED TYPE_STRING  TwosComplement
                    EffectName = source.ReadString();
                    break;
                    
            case 26:   //EffectLocateName LABEL_REQUIRED TYPE_STRING  TwosComplement
                    EffectLocateName = source.ReadString();
                    break;
                    
            }
        }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}