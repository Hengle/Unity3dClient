---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by asus.
--- DateTime: 2018/4/16 19:56
---

-- common error codes.
local common_error = {
    "unknown",
    "lack_gold",
    "lack_honor",

    -- network
    "network_disabled",
    "gate_error",

    -- other
    "future_game",
}


-- player server
local player_error = {
    -- account
    "account_nil",
    "account_error",
    "account_repeat",

    -- password
    "password_nil",
    "password_error",
    "sure_password_error",

    -- nickname
    "nickname_error",
    "nickname_content_error",
    "nickname_repeat",

    -- lobby
    "update_userinfo_success",
    "update_userinfo_sex_error",
    "copy_acccount_id",
    "secondpwd_error",
    "insure_cnt_limit",
    "insure_above_line",
    "already_signin_today",
    "exchange_code_success",
    "exchange_code_invalid",
    "exchange_code_limit",
}


-- login server
local login_error = {
    "register_error",
    "login_error",
}


-- game server
local room_error = {
    "enter_failed",
    "wrong_roomid",
    "room_is_full",
    "room_maintaining",
    "gaming_other_room",
    "gen_private_failed",
    "no_table_available",
    "table_min_win_rate",
    "table_max_flee_rate",
    "table_min_score",
    "table_max_score",
    "table_no_blackman",
    "table_no_sameip",
    "table_pwd_need",
    "table_pwd_error",
}

local table_error = {
    "table_locked",
    "wrong_seat",
    "game_started",
    "freeze_gold_failed",
    "was_readied",
    "invalid_player",
    "no_lookon_yet",
    "gaming_other_else",
    "gaming_cannot_dismiss",
    "no_right_dismiss",
    "invalid_privateid",
    "no_seat_available",
    "private_game_limit",
}

local game_error = {
    "lack_gold_banker",
    "lack_diamond_private",
}


local error_list = {
    common_error, player_error, login_error, room_error, table_error, game_error,
}


local errors = {}


function errors.str(err_code)
    local str = errors[err_code]
    if str == nil then
        print("invalid err_code:"..tostring(err_code))
        return "unknown"
    end
    return str
end


-- build map index, for all error tables.
for k, t in ipairs(error_list) do
    for i, v in ipairs(t) do
        if errors[v] then
            print("duplilcated err_code:", tostring(v))
            os.exit()
        end
        local idx = k * 10000 + i
        errors[v] = idx
        errors[idx] = v
    end
end


return errors
