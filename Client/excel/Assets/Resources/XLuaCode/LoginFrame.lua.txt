--打开登陆界面
local frame = nil
local LoginFrame = {}
local json = require(".utility.json")
local util = require(".utility.util")
local web = require(".net.web")

--点击登陆按钮
local OnClickLogin = function()
	--[[
	local hasAccount = true
	if hasAccount then
		CS.GameClient.UIFrameLua.OpenFrameLua(3)
	else
		CS.UnityEngine.Debug.LogError('has no Account Register !!!')
	end
	]]
	
	CS.GameClient.MessageBoxFrame.Open(function() print('ok') end,function() print('cancel') end,"fuck","nice to meet you ! may i make friend with you","OK","CANCEL")
	--return
	--准备登陆
	--[[
	local account = frame:GetObject('account').text
	local password = frame:GetObject('password').text
	CS.UnityEngine.Debug.LogError('account = ' .. account .. ' password = ' .. password)
	
	local err = LoginFrame:checkLoginInput(account,password)
	if err then
		CS.UnityEngine.Debug.LogError('chekLoginInput unValid !' .. err.err_code)
		return
	end
	

	LoginFrame:login({
            channel = 'game',
            account = account, 
            password = password,
        })
		]]
end

function OnOpenFrame(x)
	--添加点击登陆安扭事件
	frame = x
	x = nil
	
	frame:GetObject('account').text = 'DingJiaMing'
	frame:GetObject('password').text = '123456'
	
	frame:GetObject('btnLogin').onClick:AddListener(OnClickLogin)
	
	local accounts = {"jermine","wangzhe","shenshaojun","sddr","lanwei","niceo","sfaoer","ggsdrlll" }
	
	local accountList = frame:GetObject('accountList')
	if accountList then
		accountList:Initialize()
		accountList.mOnListElementVisible = function(index,script)
			if index >= 0 and index < #accounts then
				script:GetObject('accountName').text = accounts[index + 1]
			end
		end
		accountList:SetElementAmount(#accounts)
	end
end

function OnCloseFrame()
	local accountList = frame:GetObject('accountList')
	if accountList then
		accountList:UnInitialize()
	end
	frame = nil
end

function LoginFrame:checkLoginInput(account, password)
    local err
		if not account or #account == 0 then
			err = { err_code = 'account_nil' }
		elseif #account < 6 or #account > 20 or string.find(account, "[%W]") then
			err = { err_code = 'account_error' }
		elseif not password or #password == 0 then
			err = { err_code = 'password_nil' }
		elseif #password < 6 or #password > 20 or string.find(password, "[%W]") then
			err = { err_code = 'password_error' }
		end
    return err
end

function LoginFrame:login(params)
	CS.UnityEngine.Debug.LogError('ready to login !!!')
	params.cmd = "login"
	params.reg_id = ""
	LoginFrame:auth(params)
end

function LoginFrame:auth(params)
	CS.UnityEngine.Debug.LogError('ready to auth !!!')
	function loginCallback(ok, msg)
		print(ok)
		print(msg)
	end
	LoginFrame:serverTimeAndPack(loginCallback,params)
end

function LoginFrame:serverTimeAndPack(callback, params)
	CS.UnityEngine.Debug.LogError('ready to auth serverTimeAndPack!!!')
    web.getServerTime(function (time)
        if time <= 0 then
        	callback(false,"time over")
            return
        end

        params.client_tag = "test_clt_tag"
        params.platform = "test_pf"

        local msg = json.encode(params)
        msg = CS.Common.DESEncrypt.MyEncode(msg, time)
        msg = util.tohex(msg)

        LoginFrame:FinalAuth(callback, time, msg, params)
    end)
end

function loginCallback(ok, msg)
	if ok then
			print(msg)
		return
	end
    --print("loginCallback,ok:"..ok.."msg:"..msg)
end

function LoginFrame:FinalAuth(callback, time, msg, params)
    local postdata = {
        time = tostring(time),
        content = msg,
    }

    print(LOGIN_SERVER,"/login","POST",postdata)
    web.httpRequest(callback,LOGIN_SERVER, "/login", "POST", postdata)
end