--打开登陆界面
local LoginFrame = {}

local json = app.util.JsonUtils
local util = app.util.NumericUtils
local web = require(".net.web")
local gateNet = require(".net.GateNet")

function LoginFrame.OnOpenFrame()
	self.frame:GetObject('account').text = 'DingJiaMing'
	self.frame:GetObject('password').text = '123456'
	-- 添加按钮事件
	self.frame:GetObject('btnLogin').onClick:AddListener(LoginFrame.OnClickLogin)
	self.frame:GetObject("btnChangeAccount").onClick:AddListener(LoginFrame.onClickChangeAccount)
end

-- 按钮事件回调 局部变量且不写入元表
LoginFrame.onClickChangeAccount = function()
	app.FrameManager.OpenFrameLua(app._FrameList.AccSelectFrame)
end

--点击登陆按钮
LoginFrame.OnClickLogin = function()
    gateNet.connect(function () end)

	CS.GameClient.MessageBoxFrame.Open(function() print('ok') end,function() print('cancel') end,1)
	--[[]audio.playSound("Sound/click.mp3")
	local err = self:checkLoginInput(account, password)
	if err then
		ErrorLayer.new(err, errorLayerCallBack):addTo(self)
		return
	end

	]]--
end

function LoginFrame.OnCloseFrame()
end
-- ----------------------------------------控制代码--------------------------------------------------

function LoginFrame:checkLoginInput(account, password)
	local err
	if not account or #account == 0 then
		err = { err_code = 'account_nil' }
	elseif #account < 6 or #account > 20 or string.find(account, "[%W]") then
		err = { err_code = 'account_error' }
	elseif not password or #password == 0 then
		err = { err_code = 'password_nil' }
	elseif #password < 6 or #password > 20 or string.find(password, "[%W]") then
		err = { err_code = 'password_error' }
	end
	return err
end

function LoginFrame:login(params)
	app.Debugger.LogError('ready to login !!!')
	params.cmd = "login"
	params.reg_id = ""
	LoginFrame:auth(params)
end

function LoginFrame:auth(params)
	app.Debugger.LogError('ready to auth !!!')
	function loginCallback(ok, msg)
		print(ok)
		print(msg)
	end
	LoginFrame:serverTimeAndPack(loginCallback,params)
end

function LoginFrame:serverTimeAndPack(callback, params)
	app.Debugger.LogError('ready to auth serverTimeAndPack!!!')
	web.getServerTime(function (time)
		if time <= 0 then
			callback(false,"time over")
			return
		end

		params.client_tag = "test_clt_tag"
		params.platform = "test_pf"

		local msg = json.encode(params)
		msg = CS.Common.DESEncrypt.MyEncode(msg, time)
		msg = util.tohex(msg)

		LoginFrame:FinalAuth(callback, time, msg, params)
	end)
end

function LoginFrame:FinalAuth(callback, time, msg, params)
	local postdata = {
		time = tostring(time),
		content = msg,
	}

	print(LOGIN_SERVER,"/login","POST",postdata)
	web.httpRequest(callback,LOGIN_SERVER, "/login", "POST", postdata)
end

return LoginFrame

--[[
	local accounts = {"jermine","wangzhe","shenshaojun","sddr","lanwei","niceo","sfaoer","ggsdrlll" }

	local accountList = self:GetObject('accountList')
	if accountList then
		accountList:Initialize()
		accountList.mOnListElementVisible = function(index,script)
			if index >= 0 and index < #accounts then
				script:GetObject('accountName').text = accounts[index + 1]
			end
		end
		accountList:SetElementAmount(#accounts)
	end
	]]--

--[[local accountList = self:GetObject('accountList')
	if accountList then
		accountList:UnInitialize()
	end
	]]--
