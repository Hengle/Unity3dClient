--打开登陆界面
local LoginFrame = {}


local AccountUtils = app.util.AccountUtils
local json = app.util.JsonUtils
local web = require(".net.web")
local UserMessage = require(".net.UserMessage")

LoginFrame.accountHistory = nil

function LoginFrame.OnOpenFrame()
	--self.accountHistory = AccountUtils.readAccountHistory()

	--DEMO
	self.frame:GetObject('account').text = '13867486001'
	self.frame:GetObject('password').text = 'il15958589125'
	-- 添加按钮事件
	self.frame:GetObject('btnLogin').onClick:AddListener(LoginFrame.OnClickLogin)
	self.frame:GetObject("btnChangeAccount").onClick:AddListener(LoginFrame.onClickChangeAccount)
end

-- 点击切换账号事件
LoginFrame.onClickChangeAccount = function()
	app.FrameManager.OpenFrameLua(app._FrameList.AccSelectFrame)
end

-- 点击登陆按钮事件
LoginFrame.OnClickLogin = function()
	local account, password = self.frame:GetObject("account").text,self.frame:GetObject("password").text

	--local err = self:checkLoginInput(account,password)
	--[[if err then
		--TODO 错误遮罩
		return
	end]]--

	self:login({
		channel = "game",
		account = account,
		password = password,
	})
end

function LoginFrame.OnCloseFrame()
end

-- ----------------------------------------控制代码--------------------------------------------------

function LoginFrame:initAccountList()

end

function LoginFrame:checkLoginInput(account, password)
	local err
	if not account or #account == 0 then
		err = app.lang.account_nil
	elseif #account < 5 or #account > 12 or string.find(account, "[%W%.%-_]") then
		err = app.lang.account_error
	elseif not password or #password == 0 then
		err = app.lang.password_nil
	elseif #password < 5 or #password > 12 or string.find(password, "[%W%.%-_]") then
		err = app.lang.password_error
	end
	return err
end

function LoginFrame:login(params)

	params.cmd = "login"
	self:auth(params)
end

function LoginFrame.loginCallback(err,res)
	if CS.NetWork.HttpRequestError.HRE_SUCCEED == err then
		CS.UnityEngine.Debug.Log('<color=#00ff00>['..tostring(err)..']:'..res..'</color>')
	else
		CS.UnityEngine.Debug.LogError('['..tostring(err)..']:'..res)
	end
end

function LoginFrame:auth(params)
	--TODO 登录Loading

	function loginCallback(ok, msg)
		if not ok then
			print("auth failed:", (msg or ""))
		end

		-- 连接gate
		GateNet.connect(function(ok, msg)
			if not ok then
				--ProgressLayer.stop()
				--ErrorLayer.new(app.lang.gate_error..(msg or ""), errorLayerCallBack):addTo(self)
				print("connect failed:", (msg or ""))
				return
			end
			-- set jpush tag and alias
			--util.setJPushTagAndAlias(params.channel, params.account)
			UserMessage.send("UserInfoReq", {uid=params.account})

		end)
		-- ------------

	end



	local function getServerTimeCallback(err,res)
		if CS.NetWork.HttpRequestError.HRE_SUCCEED == err then
			CS.UnityEngine.Debug.Log('<color=#00ff00>['..tostring(err)..']:'..res..'</color>')
			--登陆服务器
			params.client_tag = tostring(CLIENT_TAG)
			params.platform = 'android'
			local msg = json.encode(params)
			--regMsg = CS.Common.DESEncrypt.MyEncode(regMsg,msg)
			--regMsg = numeric.tohex(regMsg)

			local postValues =
			{
				time = res,
				content = msg,
			}
			local postStr = web.ToPostData(postValues)
			print("HTTP postStr"..postStr)
			web.httpRequest(self.loginCallback, LOGIN_SERVER, "/login", "POST", postStr)
		else
			CS.UnityEngine.Debug.LogError('['..tostring(err)..']:'..res)
		end
	end

	--拉取服务器时间
	web.getServerTime(getServerTimeCallback,LOGIN_SERVER)
end

return LoginFrame