---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by asus.
--- DateTime: 2018/4/15 19:57
---
local RoomMsgManager = {}

local RoomConfig = require(".app.config.RoomConfig")

local message = require(".net.Message")

local player_info = {}
local table_states = {}

-- message handlers
local gameMsg = {}	-- from server
local userMsg = {}	-- from server
local roomMsg = {}	-- from client table

local handlers = {game=gameMsg, user=userMsg, room=roomMsg}

local table_id = 0
local seat_id = 0
local watching = false

local gameid = nil
local roomid = nil
local gamekey = ""

local room_session = 0
local table_session = 0
local game_scene = nil
local max_player = nil
local max_seats = nil

-- ------------------------------ UserMessage ------------------------------
function RoomMsgManager:EnterRoomRep(msg)
    dump(msg, "RoomMsgManager EnterRoomRep:")
    --print("enter room result:" .. msg.result)
        if msg.result ~= 0 then
        
    end
    
end

-- ------------------------------ game msg ------------------------------
function gameMsg.RoomSession(msg)
    print("get room session:", msg.session)
    room_session = msg.session
end

function gameMsg.SetSession(msg)
    print("get table session:", msg.session)
    table_session = msg.session
end

function gameMsg.SitdownRep(msg)
    print("sit down result:" .. msg.result .. " table session:" .. table_session .. " tableid:" .. msg.table)
    if msg.result ~= 0 then
        local conf = RoomConfig:getGameConfig(gameid)
        if conf.quick then
            message.sendMessage("game.v", {session=room_session})
        end
        --[[local scene = display.getRunningScene()
        local error_str = util.error(msg.result)
        if error_str and string.len(error_str) > 0 then
            errorLayer.new(error_str):addTo(scene)
        end]]--
        return
    end

    table_id = msg.table
    seat_id = msg.seat
    watching = (msg.watching == 1)
    if game_scene ~= nil then
        print("loading game scene:", game_scene)
        --TODO 拉起捕鱼界面
        --app.FrameManager.OpenFrameLua(game_scene)

        -- add send room id and game id
        if max_seats ~= nil then







        end
    end
end

function gameMsg.RoomInfo(msg)
    dump(msg)
end

-- ------------------------------ message manager ------------------------------
function RoomMsgManager:dispatch(name, msg)
    local clsName, funcName = name:match "([^.]*).(.*)"
    assert(handlers[clsName], clsName .. " handler not exist!")
    if handlers[clsName] then
        assert(handlers[clsName][funcName], clsName.."Mgr have no func: "..funcName)
        handlers[clsName][funcName](msg)
    end
    return true
end

---------------------------------room data visit------------------------------------------
function RoomMsgManager:setRoomId(gid, rid)
    gameid = gid
    roomid = rid
    player_info = {}
    table_states = {}
    print("setRoomId gameid:" .. gameid .. " roomid:" .. roomid)
end

function RoomMsgManager:setGameName(name)
    game_scene = name
end

function RoomMsgManager:setMaxPlayer(max, seats)
    max_player = max
    if seats ~= nil then
        max_seats = {}
        for i = 1, #seats do
            max_seats[i] = #seats[i]
        end
    else
        max_seats = nil
    end
end

function RoomMsgManager:setGameKey(key)
    gamekey = key
end

--[[function msgMgr:get_room_session()
    return room_session
end


function msgMgr:setGameConfig(conf)
    game_config = conf
end]]--

return RoomMsgManager